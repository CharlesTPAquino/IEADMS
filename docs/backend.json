{
  "entities": {
    "PostIt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PostIt",
      "type": "object",
      "description": "Represents a single post-it note.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PostIt entity."
        },
        "text": {
          "type": "string",
          "description": "The text content of the post-it note."
        },
        "authorName": {
          "type": "string",
          "description": "The name of the author of the post-it note."
        },
        "backgroundColor": {
          "type": "string",
          "description": "The background color of the post-it note (e.g., #FFFFFF)."
        },
        "reactionIds": {
          "type": "array",
          "description": "References to Reactions. (Relationship: PostIt 1:N Reaction)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "text",
        "authorName",
        "backgroundColor"
      ]
    },
    "Reaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Reaction",
      "type": "object",
      "description": "Represents a reaction (emoji) to a post-it note.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Reaction entity."
        },
        "postId": {
          "type": "string",
          "description": "Reference to PostIt. (Relationship: PostIt 1:N Reaction)"
        },
        "emoji": {
          "type": "string",
          "description": "The emoji used for the reaction."
        }
      },
      "required": [
        "id",
        "postId",
        "emoji"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/postIts/{postItId}",
        "definition": {
          "entityName": "PostIt",
          "schema": {
            "$ref": "#/backend/entities/PostIt"
          },
          "description": "Collection for storing post-it notes. No user-specific ownership or roles are present, and access control is based on the validity of the API key.",
          "params": [
            {
              "name": "postItId",
              "description": "Unique identifier for the PostIt entity."
            }
          ]
        }
      },
      {
        "path": "/reactions/{reactionId}",
        "definition": {
          "entityName": "Reaction",
          "schema": {
            "$ref": "#/backend/entities/Reaction"
          },
          "description": "Collection for storing reactions to post-it notes. No user-specific ownership or roles are present, and access control is based on the validity of the API key.",
          "params": [
            {
              "name": "reactionId",
              "description": "Unique identifier for the Reaction entity."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a simple, secure, and scalable data model for the Templo do Espirito Santo application. It prioritizes authorization independence and facilitates robust security rules. Since the application only requires globally accessible PostIts and Reactions, and given the absence of user-specific data or roles, a simple, flat structure is sufficient and optimal.\n\nTo support the QAPs (Rules are not Filters), the `postIts` and `reactions` collections are segregated to maintain a homogeneous security posture. This structure avoids complex rule logic and ensures that listing operations are secure without filtering.\n\nAuthorization Independence (CRITICAL): Given the lack of user-specific ownership or roles in the app's features, authorization will be based solely on the validity of the API key. The absence of user-specific access control simplifies the design and removes the need for denormalization.\n\nInvariants: The structure does not require complex invariants, given the straightforward nature of the entities and the lack of user-specific authorization or ownership requirements."
  }
}